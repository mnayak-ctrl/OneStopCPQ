{
  "uid" : "a4207d1d3ac4de4a",
  "name" : "test_MassUpdateAction_Turbo",
  "fullName" : "test_TC_005_TestMassUpdateOnCart.Test_CartMassUpdate#test_MassUpdateAction_Turbo",
  "historyId" : "40de3035cc3924a864ba6ffe01eaf1b2",
  "time" : {
    "start" : 1612205257479,
    "stop" : 1612205365767,
    "duration" : 108288
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <TestCases.test_TC_005_TestMassUpdateOnCart.Test_CartMassUpdate object at 0x00000177EAEF4EE0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d4cdbfe700e91c7c9292618544860c31\")>\n\n    @pytest.mark.TurboPricing\n    def test_MassUpdateAction_Turbo(self, setup):\n        # Step:03 Set up Logger Object\n        self.lgrObj = Logger.logGen('TC_005_3')\n        self.lgrObj.info(\"#################################################################\")\n        self.lgrObj.info(\"TC_005_3: Cart - Mass Update Action (Normal Cart - Turbo Pricing)  \")\n        self.lgrObj.info(\"#################################################################\")\n    \n        self.driver = setup\n        self.lgrObj.info(\"---------- Login to the application\")\n        # Set up Object for Login Page Object # Set User Name, Password\n        self.driver.get(self.baseUrl)\n        self.lgnObj = loginPage(self.driver)\n        self.lgnObj.setUsername(self.UserName)\n        self.lgnObj.setPassword(self.Password)\n        self.lgnObj.clickLoginButton()\n        self.driver.maximize_window()\n    \n        # Switch to Lightning\n        hmpageObj = HomePage(self.driver)\n        hmpageObj.switchToLightning()\n        self.lgrObj.info(\"---------- Create a new Proposal\")\n        hmpageObj.ClickSearchAppsIcon()\n        # td_AppToSearchSelect=\n        appToSearchFor = XLUtils.readData(self.file, 'TC_005', 2, 2)\n        hmpageObj.SearchAndClickApp(appToSearchFor)\n        # Set up Object for Proposal Tab Page object class\n        PropsPageObj = ProposalDetailPage(self.driver)\n    \n        # Click on New button to go to Create Proposal Edit page\n        PropsPageObj.ClickProposalPageButton('New')\n        # CLick Next in the Record Type Dialog Box\n        PropsPageObj.DialogAcceptOrCancel('Next')\n    \n        self.lgrObj.info(\"---------- Set Proposal Fields ----------\")\n        # Set QTC Profile\n        PropsPageObj.SetProposalField('QTC Profile', 'Regular')\n        # Proposal Name\n        label = XLUtils.readData(self.file, 'TC_005', 1, 3)\n        value = XLUtils.readData(self.file, 'TC_005', 2, 3)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Price List\n        label = XLUtils.readData(self.file, 'TC_005', 1, 4)\n        value = XLUtils.readData(self.file, 'TC_005', 2, 4)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Opportunity\n        label = XLUtils.readData(self.file, 'TC_005', 1, 5)\n        value = XLUtils.readData(self.file, 'TC_005', 2, 5)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Account\n        label = XLUtils.readData(self.file, 'TC_005', 1, 6)\n        value = XLUtils.readData(self.file, 'TC_005', 2, 6)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Click on Save button\n>       PropsPageObj.ClickProposalPageButton('Save')\n\nTestCases\\test_TC_005_TestMassUpdateOnCart.py:357: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ProposalDetailPage.py:48: in ClickProposalPageButton\n    Btn=WebDriverWait(self.driver,60).until(EC.presence_of_element_located((By.XPATH,ProposalBtn)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d4cdbfe700e91c7c9292618544860c31\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000177EAD72670>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1612205253903,
      "stop" : 1612205257479,
      "duration" : 3576
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "TurboPricing"
  }, {
    "name" : "suite",
    "value" : "test_TC_005_TestMassUpdateOnCart"
  }, {
    "name" : "subSuite",
    "value" : "Test_CartMassUpdate"
  }, {
    "name" : "host",
    "value" : "L005891"
  }, {
    "name" : "thread",
    "value" : "25720-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_TC_005_TestMassUpdateOnCart"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "TurboPricing" ]
  },
  "source" : "a4207d1d3ac4de4a.json",
  "parameterValues" : [ ]
}