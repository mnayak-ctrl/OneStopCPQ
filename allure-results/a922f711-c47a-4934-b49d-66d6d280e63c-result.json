{"name": "test_CartCopyAction_Turbo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCases.test_TC_004_TestCopyActionOnCart.Test_CartCopyAction object at 0x00000177EACBC970>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e892ddac31bf9622bd47da13d85f59f3\")>\n\n    @pytest.mark.TurboPricing\n    def test_CartCopyAction_Turbo(self,setup):\n        # Create a Logger Object\n        self.lgrObj = Logger.logGen('TC_004_3')\n        self.lgrObj.info(\"#################################################################\")\n        self.lgrObj.info(\"    TC_004_3: Cart - Copy Action (Normal Cart - Turbo Pricing)     \")\n        self.lgrObj.info(\"#################################################################\")\n        self.driver=setup\n    \n        self.lgrObj.info(\"---------- Login to the application\")\n        # Set up Object for Login Page Object # Set User Name, Password\n        self.driver.get(self.baseUrl)\n        self.lgnObj = loginPage(self.driver)\n        self.lgnObj.setUsername(self.UserName)\n        self.lgnObj.setPassword(self.Password)\n        self.lgnObj.clickLoginButton()\n        self.driver.maximize_window()\n    \n        # Switch to Lightning\n        hmpageObj = HomePage(self.driver)\n        hmpageObj.switchToLightning()\n        self.lgrObj.info(\"---------- Create a new Proposal\")\n        hmpageObj.ClickSearchAppsIcon()\n        # td_AppToSearchSelect=\n        appToSearchFor = XLUtils.readData(self.file, 'TC_004', 2, 2)\n        hmpageObj.SearchAndClickApp(appToSearchFor)\n        # Set up Object for Proposal Tab Page object class\n        PropsPageObj = ProposalDetailPage(self.driver)\n    \n        # Click on New button to go to Create Proposal Edit page\n        PropsPageObj.ClickProposalPageButton('New')\n        # CLick Next in the Record Type Dialog Box\n        PropsPageObj.DialogAcceptOrCancel('Next')\n    \n        self.lgrObj.info(\"---------- Set Proposal Fields\")\n        # Proposal Name\n        label = XLUtils.readData(self.file, 'TC_004', 1, 3)\n        value = XLUtils.readData(self.file, 'TC_004', 2, 3)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Price List\n        label = XLUtils.readData(self.file, 'TC_004', 1, 4)\n        value = XLUtils.readData(self.file, 'TC_004', 2, 4)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Opportunity\n        label = XLUtils.readData(self.file, 'TC_004', 1, 5)\n        value = XLUtils.readData(self.file, 'TC_004', 2, 5)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Account\n        label = XLUtils.readData(self.file, 'TC_004', 1, 6)\n        value = XLUtils.readData(self.file, 'TC_004', 2, 6)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Click on Save button\n>       PropsPageObj.ClickProposalPageButton('Save')\n\nTestCases\\test_TC_004_TestCopyActionOnCart.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ProposalDetailPage.py:48: in ClickProposalPageButton\n    Btn=WebDriverWait(self.driver,60).until(EC.presence_of_element_located((By.XPATH,ProposalBtn)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e892ddac31bf9622bd47da13d85f59f3\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000177EAC9F940>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1612204953507, "stop": 1612205054918, "uuid": "45538dd9-6211-416c-ac1a-d65c9670e8ed", "historyId": "f99ca697d3d02a4de91247ad66558d10", "testCaseId": "b3c31d91f0062e5fe150f5e963e0f6db", "fullName": "test_TC_004_TestCopyActionOnCart.Test_CartCopyAction#test_CartCopyAction_Turbo", "labels": [{"name": "tag", "value": "TurboPricing"}, {"name": "suite", "value": "test_TC_004_TestCopyActionOnCart"}, {"name": "subSuite", "value": "Test_CartCopyAction"}, {"name": "host", "value": "L005891"}, {"name": "thread", "value": "25720-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_TC_004_TestCopyActionOnCart"}]}