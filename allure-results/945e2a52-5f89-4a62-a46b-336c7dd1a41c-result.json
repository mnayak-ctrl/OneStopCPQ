{"name": "test_DeleteProductAction_Classic", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCases.test_TC_006_TestDeletePrdOnCart.Test_CartDeletePrdAction object at 0x00000177EAC4ED90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7cd074aea91089158d31580fb34de915\")>\n\n    @pytest.mark.RegularPricing\n    def test_DeleteProductAction_Classic(self,setup):\n        # Step:03 Set up Logger Object\n        self.lgrObj = Logger.logGen('TC_006_1')\n        self.lgrObj.info(\"####################################################################\")\n        self.lgrObj.info(\"TC_006_1: Cart - Delete Product Action (Regular Cart - Normal Pricing)\")\n        self.lgrObj.info(\"#####################################################################\")\n    \n        self.driver=setup\n    \n        self.lgrObj.info(\"---------- Login to the application\")\n        # Set up Object for Login Page Object # Set User Name, Password\n        self.driver.get(self.baseUrl)\n        self.lgnObj = loginPage(self.driver)\n        self.lgnObj.setUsername(self.UserName)\n        self.lgnObj.setPassword(self.Password)\n        self.lgnObj.clickLoginButton()\n        self.driver.maximize_window()\n    \n        # Switch to Lightning\n        hmpageObj = HomePage(self.driver)\n        hmpageObj.switchToLightning()\n    \n        self.lgrObj.info(\"---------- Create a new Proposal\")\n        hmpageObj.ClickSearchAppsIcon()\n        # td_AppToSearchSelect=\n        appToSearchFor = XLUtils.readData(self.file, 'TC_006', 2, 2)\n        hmpageObj.SearchAndClickApp(appToSearchFor)\n        # Set up Object for Proposal Tab Page object class\n        PropsPageObj = ProposalDetailPage(self.driver)\n    \n        # Click on New button to go to Create Proposal Edit page\n        PropsPageObj.ClickProposalPageButton('New')\n        # CLick Next in the Record Type Dialog Box\n        PropsPageObj.DialogAcceptOrCancel('Next')\n    \n        self.lgrObj.info(\"---------- Set Proposal Fields ----------\")\n        # Proposal Name\n        label = XLUtils.readData(self.file, 'TC_006', 1, 3)\n        value = XLUtils.readData(self.file, 'TC_006', 2, 3)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Price List\n        label = XLUtils.readData(self.file, 'TC_006', 1, 4)\n        value = XLUtils.readData(self.file, 'TC_006', 2, 4)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Opportunity\n        label = XLUtils.readData(self.file, 'TC_006', 1, 5)\n        value = XLUtils.readData(self.file, 'TC_006', 2, 5)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Account\n        label = XLUtils.readData(self.file, 'TC_006', 1, 6)\n        value = XLUtils.readData(self.file, 'TC_006', 2, 6)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Click on Save button\n>       PropsPageObj.ClickProposalPageButton('Save')\n\nTestCases\\test_TC_006_TestDeletePrdOnCart.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ProposalDetailPage.py:48: in ClickProposalPageButton\n    Btn=WebDriverWait(self.driver,60).until(EC.presence_of_element_located((By.XPATH,ProposalBtn)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7cd074aea91089158d31580fb34de915\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x00000177EAD729D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1612205369309, "stop": 1612205468169, "uuid": "42efea0c-8032-4f16-ac5d-f34395317138", "historyId": "799b9c7c557b3f04d3e7a8227081cfe4", "testCaseId": "aa654fdc5f415c43d9c0f23114014726", "fullName": "test_TC_006_TestDeletePrdOnCart.Test_CartDeletePrdAction#test_DeleteProductAction_Classic", "labels": [{"name": "tag", "value": "RegularPricing"}, {"name": "suite", "value": "test_TC_006_TestDeletePrdOnCart"}, {"name": "subSuite", "value": "Test_CartDeletePrdAction"}, {"name": "host", "value": "L005891"}, {"name": "thread", "value": "25720-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_TC_006_TestDeletePrdOnCart"}]}