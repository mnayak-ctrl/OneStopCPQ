{"name": "test_CustomCartView_Turbo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCases.test_TC_008_TestCustomView.TestCustomCartView object at 0x000002A298FDBD60>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"360aca2181be31d4f8fec6c2349ffa98\")>\n\n    @pytest.mark.TurboPricing\n    def test_CustomCartView_Turbo(self, setup):\n        self.lgrObj = Logger.logGen('TC_008_2')\n        self.lgrObj.info(\"#################################################################\")\n        self.lgrObj.info(\"    TC_008_2: Custom Cart View (Regular Cart Turbo Pricing)      \")\n        self.lgrObj.info(\"#################################################################\")\n    \n        self.lgrObj.info(\"---------- Login to the Application\")\n        print(\"---------- Login to the Application\")\n        self.driver = setup\n        self.driver.get(self.baseUrl)\n        self.lgnObj = loginPage(self.driver)\n        self.lgnObj.setUsername(self.UserName)\n        self.lgnObj.setPassword(self.Password)\n        self.lgnObj.clickLoginButton()\n        self.driver.maximize_window()\n        self.lgrObj.info(\"---------- Switch to Lightning if not set\")\n        self.HomePageObj = HomePage(self.driver)\n        self.HomePageObj.switchToLightning()\n    \n        hmpageObj = HomePage(self.driver)\n        hmpageObj.switchToLightning()\n    \n        self.lgrObj.info(\"---------- Create a new Proposal\")\n        hmpageObj.ClickSearchAppsIcon()\n        # td_AppToSearchSelect=\n        appToSearchFor = XLUtils.readData(self.file, 'TC_008', 2, 2)\n        hmpageObj.SearchAndClickApp(appToSearchFor)\n        # Set up Object for Proposal Tab Page object class\n        PropsPageObj = ProposalDetailPage(self.driver)\n    \n        # Click on New button to go to Create Proposal Edit page\n        PropsPageObj.ClickProposalPageButton('New')\n        # CLick Next in the Record Type Dialog Box\n        PropsPageObj.DialogAcceptOrCancel('Next')\n    \n        self.lgrObj.info(\"---------- Set Proposal Fields\")\n        # Proposal Name\n        label = XLUtils.readData(self.file, 'TC_008', 1, 3)\n        value = XLUtils.readData(self.file, 'TC_008', 2, 3)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Price List\n        label = XLUtils.readData(self.file, 'TC_008', 1, 4)\n        value = XLUtils.readData(self.file, 'TC_008', 2, 4)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Opportunity\n        label = XLUtils.readData(self.file, 'TC_008', 1, 5)\n        value = XLUtils.readData(self.file, 'TC_008', 2, 5)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Account\n        label = XLUtils.readData(self.file, 'TC_008', 1, 6)\n        value = XLUtils.readData(self.file, 'TC_008', 2, 6)\n        PropsPageObj.SetProposalField(label, value)\n    \n        # Click on Save button\n        PropsPageObj.ClickProposalPageButton('Save')\n    \n        self.lgrObj.info(\"---------- Configure the Proposal\")\n        PropsPageObj.ClickConfigureProductButton('MN - 2020 (Turbo)')\n        CtlgPgObj = CatalogPage(self.driver)\n        self.lgrObj.info(\"---------- Search and add Product to the Cart\")\n        HomePage.SwitchToFrame(self)\n        PrdName = XLUtils.readData(self.file, 'TC_008', 2, 8)\n        CtlgPgObj.SearchAndAddProduct('Add to Cart', PrdName)\n        self.lgrObj.info(\"---------- Go to Shopping Cart\")\n        CtlgPgObj.ClickCatalogPageButton('Go to Pricing')\n        # Set up Object for Cart Page\n        CartPgObj = CartPage(self.driver)\n        CartPgObj.WaitForPricingProgressBarToFinish()\n        time.sleep(3)\n    \n        self.lgrObj.info(\"---------- Create a new Custom View\")\n        CustViwObj = CustomCartView(self.driver)\n        CustViwObj.CreateCustomCartView('Is Optional', 'MN-2020 Is Optional View 2')\n    \n        self.lgrObj.info(\"---------- Check the Group Name\")\n        path = \"//div[@class='block-productname']//a//span\"\n        GrpEle = WebDriverWait(self.driver, 60).until(EC.presence_of_element_located((By.XPATH, path)))\n        ActualGrpName = GrpEle.get_attribute(\"title\")\n        print(\"Actual Group name is: \" + str(ActualGrpName))\n        if ActualGrpName == str(\"false (1)\"):\n            assert True\n            self.lgrObj.info(\"---------- (PASSED) Custom Cart View Group is Correct\")\n        else:\n            assert False\n            self.lgrObj.info(\"---------- (FAILED) Custom Cart View Group is NOT Correct\")\n            self.driver.close()\n    \n        self.lgrObj.info(\"---------- Expand the Group and set Is Optional Checkbox\")\n        ExpandIcon = \"//div[@class='block-productname']//a\"\n        ExpandIconEle = WebDriverWait(self.driver, 60).until(EC.presence_of_element_located((By.XPATH, ExpandIcon)))\n        ExpandIconEle.click()\n        time.sleep(3)\n        # print(\"Click on Is Optional Checkbox\")\n        CartPgObj.ClickIsOptionalForLineItem('MN - 2020 Standalone 1')\n        CartPgObj.WaitForPricingProgressBarToFinish()\n    \n        CustViwObj.SelectCustomCartView('MN-2020 Is Optional View 2')\n        time.sleep(3)\n        self.lgrObj.info(\"---------- Check the Group Name\")\n        path = \"//div[@class='block-productname']//a//span\"\n        GrpEle = WebDriverWait(self.driver, 60).until(EC.presence_of_element_located((By.XPATH, path)))\n        ActualGrpName = GrpEle.get_attribute(\"title\")\n        print(\"Actual Group name is: \" + str(ActualGrpName))\n        if ActualGrpName == str(\"true (1)\"):\n            assert True\n            self.lgrObj.info(\"---------- (PASSED) Custom Cart View Group Name is updated correctly\")\n        else:\n            assert False\n            self.lgrObj.info(\"---------- (FAILED) Custom Cart View Group Name is NOT updated correctly\")\n            self.driver.close()\n        self.lgrObj.info(\"---------- Delete the View\")\n>       CustViwObj.EditDeleteCustomCartView('MN-2020 Is Optional View 2', 'Delete View')\n\nTestCases\\test_TC_008_TestCustomView.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\CustomCartView.py:72: in EditDeleteCustomCartView\n    PathEle = WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.XPATH, Path)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"360aca2181be31d4f8fec6c2349ffa98\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x000002A2991403D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1612289773428, "stop": 1612289947602, "uuid": "953d39f3-8c67-4010-abb2-90a80163aaef", "historyId": "6098b7cdb58194e16923cb248948033d", "testCaseId": "6156d9df58ef136c513ebd4353f0e79b", "fullName": "test_TC_008_TestCustomView.TestCustomCartView#test_CustomCartView_Turbo", "labels": [{"name": "tag", "value": "TurboPricing"}, {"name": "suite", "value": "test_TC_008_TestCustomView"}, {"name": "subSuite", "value": "TestCustomCartView"}, {"name": "host", "value": "L005891"}, {"name": "thread", "value": "21860-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_TC_008_TestCustomView"}]}